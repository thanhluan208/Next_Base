{
  "genNextComponent": {
    "prefix": "genNextComponent",
    "body": [
      "import React from 'react';",
      "import PropTypes from 'prop-types';",
      "import CommonStyles from 'src/components/commonStyles';",
      "import CommonIcons from 'src/components/commonIcons';",
      "",
      "const propTypes = {};",
      "",
      "const ${1} = props => {",
      "  //! State",
      "",
      "  //! Function",
      "",
      "  //! Render",
      "  return <CommonStyles.Box>${1}</CommonStyles.Box>;",
      "};",
      "",
      "${1}.propTypes = propTypes;",
      "export default ${1};",
      ""
    ],
    "description": "genNextComponent"
  },
  "genNextDialog": {
    "prefix": "genNextDialog",
    "body": [
      "import React from 'react';",
      "import Dialog from '@mui/material/Dialog';",
      "import DialogActions from '@mui/material/DialogActions';",
      "import DialogContent from '@mui/material/DialogContent';",
      "import DialogTitle from '@mui/material/DialogTitle';",
      "import PropTypes from 'prop-types';",
      "import { Form, Formik } from 'formik';",
      "import * as Yup from 'yup';",
      "import CommonStyles from '.';",
      "",
      "const propTypes = {",
      "  open: PropTypes.bool.isRequired,",
      "  toggle: PropTypes.func.isRequired",
      "};",
      "",
      "const ${1:example}= ({ open, toggle }) => {",
      "  //! State",
      "  const initialValues = {};",
      "",
      "  const validationSchema = Yup.object().shape({});",
      "",
      "  //! Function",
      "  const onSubmit = (values, formikProps) => {};",
      "",
      "  //! Render",
      "  return (",
      "    <Dialog open={open} onClose={toggle}>",
      "      <DialogTitle>${1:example}</DialogTitle>",
      "      <DialogContent>",
      "        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>",
      "          {formikProps => {",
      "            return <Form></Form>;",
      "          }}",
      "        </Formik>",
      "      </DialogContent>",
      "      <DialogActions>",
      "        <CommonStyles.Button onClick={toggle}>Disagree</CommonStyles.Button>",
      "        <CommonStyles.Button onClick={toggle} autoFocus>",
      "          Agree",
      "        </CommonStyles.Button>",
      "      </DialogActions>",
      "    </Dialog>",
      "  );",
      "};",
      "",
      "${1:example}.propTypes = propTypes;",
      "export default ${1:example};",
      ""
    ],
    "description": "genNextDialog"
  },
  "genHookQuery": {
    "prefix": "genHookQuery",
    "body": [
      "import { useQuery } from '@tanstack/react-query';",
      "import { queryKeys } from 'src/constant/keys';",
      "import ${3:queryService} from 'src/services/${3:queryService}';",
      "",
      "export const ${1:queryHook}= () => {",
      "  return useQuery([queryKeys.${2:queryKey}], () => ${3:queryService}.${4:queryMethod});",
      "};",
      ""
    ],
    "description": "genHookQuery"
  }
}
